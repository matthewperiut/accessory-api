plugins {
    id 'maven-publish'
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'fabric-loom' version '1.9.2'
    id 'babric-loom-extension' version '1.9.4'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

loom {
}

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.

    // Used for the fabric toolchain in this project.
    maven {
        name = 'Babric'
        url = 'https://maven.glass-launcher.net/babric'
    }
    // Used for mappings.
    maven {
        name = 'Glass Releases'
        url = 'https://maven.glass-launcher.net/releases'
    }
    // Used for StationAPI and HowManyItems.
    maven {
        name = 'Glass Snapshots'
        url = 'https://maven.glass-launcher.net/snapshots'
    }
    // Used for a StationAPI dependency.
    maven {
        name = 'Froge'
        url 'https://maven.minecraftforge.net/'
    }
    // Used for projects that do not have a maven repository, but do have a GitHub repository with working build scripts.
    maven {
        name = 'Jitpack'
        url = 'https://jitpack.io'
    }
    // Used for SpawnEggs
    maven {
        name = "NyaRepo"
        url = "https://maven.fildand.cz/releases"
    }
    // Used for another StationAPI dependency
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
    mavenCentral()
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.glasslauncher:biny:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    implementation "com.google.guava:guava:33.2.1-jre"
    implementation "com.google.code.gson:gson:2.9.0"
    implementation "org.slf4j:slf4j-api:1.8.0-beta4"
    implementation 'org.apache.logging.log4j:log4j-slf4j18-impl:2.17.2'
    implementation(include("me.carleslc:Simple-Yaml:1.8.4") as Dependency)

    // Optional, but convenient mods for mod creators and users alike.
    modImplementation("net.glasslauncher.mods:ModMenu:${project.modmenu_version}") {
        transitive false
    }

    modImplementation("net.glasslauncher.mods:glass-networking:${project.glass_networking_version}") {
        transitive false
    }

    modImplementation("net.glasslauncher.mods:GlassConfigAPI:${project.gcapi_version}") {
        transitive false
    }

    modImplementation("maven.modrinth:retrocommands:${project.retrocommands_version}") {
        transitive false
    }

    // StationAPI dependency
    modImplementation "net.modificationstation:StationAPI:${project.stapi_version}"

    // StationAPI development mods
    modRuntimeOnly ("maven.modrinth:fast-stapi-intro:${project.stapi_fast_intro_version}") {
        transitive false
    }

    modImplementation("com.github.paulevsGitch:BHCreative:${project.bhcreative_version}"){
        transitive false
    }

//	modImplementation("net.glasslauncher.mods:AlwaysMoreItems:${project.alwaysmoreitems_version}") {
//		transitive false
//	}
//
//	modImplementation("net.danygames2014:spawneggs:${project.spawneggs_version}") {
//		transitive false
//	}
}

// add test tasks
test {
    useJUnit()
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    // Loom also requires J17.
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}

loom {
    runs {
        register("runTestmodClient") {
            source("test")
            //noinspection GroovyImplicitNullArgumentCall
            client()
        }
        register("runTestmodServer") {
            source("test")
            //noinspection GroovyImplicitNullArgumentCall
            server()
        }
    }
}
